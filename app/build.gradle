apply plugin: 'com.android.application'

android {
  compileSdkVersion 27
  buildToolsVersion '29.0.2'

  flavorDimensions "iab", "network"

  defaultConfig {
    applicationId "com.appcoins.trivialdrivesample"
    minSdkVersion 21
    targetSdkVersion 27
    versionCode 23
    versionName "1.5.3"
    multiDexEnabled true
  }

  compileOptions {
    sourceCompatibility 1.8
    targetCompatibility 1.8
  }

  signingConfigs {
    release {
      storeFile = file(project.APPCOINS_WALLET_STORE_FILE)
      storePassword = project.APPCOINS_WALLET_STORE_PASSWORD
      keyAlias = project.APPCOINS_WALLET_KEY_ALIAS
      keyPassword = project.APPCOINS_WALLET_KEY_PASSWORD
    }
  }

  buildTypes {
    debug {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      applicationVariants.all { variant -> renameArtifact(defaultConfig)
      }
    }

    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
      applicationVariants.all { variant -> renameArtifact(defaultConfig)
      }
    }
  }

  productFlavors {
    googleiab {
      dimension "iab"
      buildConfigField "String", "IAB_BIND_ACTION",
          "\"" + project.GOOGLE_IAB_BIND_ACTION + "\""
      buildConfigField "String", "IAB_KEY",
          "\"" + project.GOOGLE_IAB_KEY + "\""
      buildConfigField "String", "IAB_BIND_PACKAGE",
          "\"" + project.GOOGLE_IAB_BIND_PACKAGE + "\""
      buildConfigField "String", "IAB_UPDATE_ACTION",
          "\"" + project.GOOGLE_IAB_UPDATE_ACTION + "\""
      manifestPlaceholders = [iabPermission: project.GOOGLE_IAB_PERMISSION]
    }

    appcoinssdk {
      dimension "iab"
      buildConfigField "String", "IAB_UPDATE_ACTION",
          "\"" + project.APPCOINS_IAB_UPDATE_ACTION + "\""
      manifestPlaceholders = [iabPermission: project.APPCOINS_IAB_PERMISSION]
      applicationVariants.all { variant ->
        if (variant.buildType.getName().equalsIgnoreCase("debug")) {
          buildConfigField "String", "IAB_BIND_ACTION",
              "\"" + project.APPCOINS_DEV_IAB_BIND_ACTION + "\""
          buildConfigField "String", "IAB_BIND_PACKAGE",
              "\"" + project.APPCOINS_DEV_IAB_BIND_PACKAGE + "\""
          buildConfigField "String", "IAB_WALLET_ADDR",
              "\"" + project.APPCOINS_DEV_IAB_WALLET_ADDR + "\""
          buildConfigField "String", "IAB_KEY",
              "\"" + project.APPCOINS_DEV_IAB_KEY + "\""
        } else {
          buildConfigField "String", "IAB_KEY",
              "\"" + project.APPCOINS_IAB_KEY + "\""
          buildConfigField "String", "IAB_BIND_ACTION",
              "\"" + project.APPCOINS_IAB_BIND_ACTION + "\""
          buildConfigField "String", "IAB_BIND_PACKAGE",
              "\"" + project.APPCOINS_IAB_BIND_PACKAGE + "\""
          buildConfigField "String", "IAB_WALLET_ADDR",
              "\"" + project.APPCOINS_IAB_WALLET_ADDR + "\""
        }
      }
    }

    appcoinsiab {
      dimension "iab"
      buildConfigField "String", "IAB_UPDATE_ACTION",
          "\"" + project.APPCOINS_IAB_UPDATE_ACTION + "\""
      manifestPlaceholders = [iabPermission: project.APPCOINS_IAB_PERMISSION]
      applicationVariants.all { variant ->
        if (variant.buildType.getName().equalsIgnoreCase("debug")) {
          buildConfigField "String", "IAB_BIND_ACTION",
              "\"" + project.APPCOINS_DEV_IAB_BIND_ACTION + "\""
          buildConfigField "String", "IAB_BIND_PACKAGE",
              "\"" + project.APPCOINS_DEV_IAB_BIND_PACKAGE + "\""
          buildConfigField "String", "IAB_WALLET_ADDR",
              "\"" + project.APPCOINS_DEV_IAB_WALLET_ADDR + "\""
          buildConfigField "String", "IAB_KEY",
              "\"" + project.APPCOINS_DEV_IAB_KEY + "\""
        } else {
          buildConfigField "String", "IAB_KEY",
              "\"" + project.APPCOINS_IAB_KEY + "\""
          buildConfigField "String", "IAB_BIND_ACTION",
              "\"" + project.APPCOINS_IAB_BIND_ACTION + "\""
          buildConfigField "String", "IAB_BIND_PACKAGE",
              "\"" + project.APPCOINS_IAB_BIND_PACKAGE + "\""
          buildConfigField "String", "IAB_WALLET_ADDR",
              "\"" + project.APPCOINS_IAB_WALLET_ADDR + "\""
        }
      }
    }

    mainNetwork {
      dimension "network"
      buildConfigField "boolean", "TEST_NETWORK", "false"
      buildConfigField "String", "BACKEND_HOST",
          "\"" + project.BACK_END_HOST_PROD + "\""
    }

    ropstenNetwork {
      dimension "network"
      applicationIdSuffix ".test"
      buildConfigField "boolean", "TEST_NETWORK", "true"
      buildConfigField "String", "BACKEND_HOST",
          "\"" + project.BACK_END_HOST_DEV + "\""
    }
  }
}

dependencies {
  implementation 'com.android.support:appcompat-v7:27.1.1'
  implementation 'com.google.code.gson:gson:2.8.6'
  debugImplementation "io.catappult:appcoins-ads:$sdkDev"
  debugImplementation "io.catappult:android-appcoins-billing:$sdkDev"
  debugImplementation "io.catappult:appcoins-contract-proxy:$sdkDev"
  releaseImplementation "io.catappult:appcoins-ads:$sdk"
  releaseImplementation "io.catappult:android-appcoins-billing:$sdk"
  releaseImplementation "io.catappult:appcoins-contract-proxy:$sdk"
}

def renameArtifact(defaultConfig) {
  android.applicationVariants.all { variant ->
    variant.outputs.all {
      def fileName = "trivial-drive-appcoins-sample-${defaultConfig.versionName}_${variant.name}"
      outputFileName = new File("${fileName}.apk")
    }
  }
}